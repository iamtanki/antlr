//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from GE_Expr.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IGE_ExprListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class GE_ExprBaseListener : IGE_ExprListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GE_ExprParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProg([NotNull] GE_ExprParser.ProgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GE_ExprParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProg([NotNull] GE_ExprParser.ProgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GE_ExprParser.assign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign([NotNull] GE_ExprParser.AssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GE_ExprParser.assign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign([NotNull] GE_ExprParser.AssignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Call</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCall([NotNull] GE_ExprParser.CallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Call</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCall([NotNull] GE_ExprParser.CallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Rgb</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRgb([NotNull] GE_ExprParser.RgbContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Rgb</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRgb([NotNull] GE_ExprParser.RgbContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Paren</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParen([NotNull] GE_ExprParser.ParenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Paren</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParen([NotNull] GE_ExprParser.ParenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Num</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNum([NotNull] GE_ExprParser.NumContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Num</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNum([NotNull] GE_ExprParser.NumContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>String</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString([NotNull] GE_ExprParser.StringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>String</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString([NotNull] GE_ExprParser.StringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Wenben</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWenben([NotNull] GE_ExprParser.WenbenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Wenben</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWenben([NotNull] GE_ExprParser.WenbenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Empty</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmpty([NotNull] GE_ExprParser.EmptyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Empty</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmpty([NotNull] GE_ExprParser.EmptyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Identy</c>
	/// labeled alternative in <see cref="GE_ExprParser.id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdenty([NotNull] GE_ExprParser.IdentyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Identy</c>
	/// labeled alternative in <see cref="GE_ExprParser.id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdenty([NotNull] GE_ExprParser.IdentyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Exid</c>
	/// labeled alternative in <see cref="GE_ExprParser.id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExid([NotNull] GE_ExprParser.ExidContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Exid</c>
	/// labeled alternative in <see cref="GE_ExprParser.id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExid([NotNull] GE_ExprParser.ExidContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GE_ExprParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] GE_ExprParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GE_ExprParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] GE_ExprParser.NumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GE_ExprParser.parenthesis"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesis([NotNull] GE_ExprParser.ParenthesisContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GE_ExprParser.parenthesis"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesis([NotNull] GE_ExprParser.ParenthesisContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GE_ExprParser.exprList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprList([NotNull] GE_ExprParser.ExprListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GE_ExprParser.exprList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprList([NotNull] GE_ExprParser.ExprListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GE_ExprParser.text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterText([NotNull] GE_ExprParser.TextContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GE_ExprParser.text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitText([NotNull] GE_ExprParser.TextContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
