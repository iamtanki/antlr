//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from GE_Expr.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="GE_ExprParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public interface IGE_ExprListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GE_ExprParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProg([NotNull] GE_ExprParser.ProgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GE_ExprParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProg([NotNull] GE_ExprParser.ProgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GE_ExprParser.assign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssign([NotNull] GE_ExprParser.AssignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GE_ExprParser.assign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssign([NotNull] GE_ExprParser.AssignContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Call</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCall([NotNull] GE_ExprParser.CallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Call</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCall([NotNull] GE_ExprParser.CallContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Rgb</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRgb([NotNull] GE_ExprParser.RgbContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Rgb</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRgb([NotNull] GE_ExprParser.RgbContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Paren</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParen([NotNull] GE_ExprParser.ParenContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Paren</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParen([NotNull] GE_ExprParser.ParenContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Num</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNum([NotNull] GE_ExprParser.NumContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Num</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNum([NotNull] GE_ExprParser.NumContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>String</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString([NotNull] GE_ExprParser.StringContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>String</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString([NotNull] GE_ExprParser.StringContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Wenben</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWenben([NotNull] GE_ExprParser.WenbenContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Wenben</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWenben([NotNull] GE_ExprParser.WenbenContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Empty</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmpty([NotNull] GE_ExprParser.EmptyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Empty</c>
	/// labeled alternative in <see cref="GE_ExprParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmpty([NotNull] GE_ExprParser.EmptyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Identy</c>
	/// labeled alternative in <see cref="GE_ExprParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdenty([NotNull] GE_ExprParser.IdentyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Identy</c>
	/// labeled alternative in <see cref="GE_ExprParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdenty([NotNull] GE_ExprParser.IdentyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Exid</c>
	/// labeled alternative in <see cref="GE_ExprParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExid([NotNull] GE_ExprParser.ExidContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Exid</c>
	/// labeled alternative in <see cref="GE_ExprParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExid([NotNull] GE_ExprParser.ExidContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GE_ExprParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] GE_ExprParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GE_ExprParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] GE_ExprParser.NumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GE_ExprParser.parenthesis"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesis([NotNull] GE_ExprParser.ParenthesisContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GE_ExprParser.parenthesis"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesis([NotNull] GE_ExprParser.ParenthesisContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GE_ExprParser.exprList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprList([NotNull] GE_ExprParser.ExprListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GE_ExprParser.exprList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprList([NotNull] GE_ExprParser.ExprListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GE_ExprParser.text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterText([NotNull] GE_ExprParser.TextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GE_ExprParser.text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitText([NotNull] GE_ExprParser.TextContext context);
}
